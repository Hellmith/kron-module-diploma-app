import type { AxiosPromise } from 'axios'import { RESOURCE } from 'shared/config'import apiInstance from '../base'import type { IOptionResponse } from '../models'export interface IOptionParams {	name?: string	value?: string}export interface ICurrentOption {	id: number}export interface IUpdateOptionProps {	id: ICurrentOption	params: IOptionParams}export const getAllOptions = (): AxiosPromise<IOptionResponse[]> => {	return apiInstance.get(RESOURCE['options'])}export const getOptionById = ({ id }: ICurrentOption): AxiosPromise<IOptionResponse> => {	return apiInstance.get(RESOURCE['options'] + `/${id}`)}export const createNewOption = (params: IOptionParams): AxiosPromise<IOptionResponse> => {	return apiInstance.post(RESOURCE['options'], params)}export const deleteleOptionById = ({ id }: ICurrentOption) => {	return apiInstance.delete(RESOURCE['options'] + `/${id}`)}export const updateOptionById = ({ id, params }: IUpdateOptionProps): AxiosPromise<IOptionResponse> => {	return apiInstance.put(RESOURCE['options'] + `/${id}`, params)}